   #Область КлючевыеПоказателиЭффективности

&НаКлиенте
Процедура ИспользоватьКлючевыеПоказателиЭффективностиПриИзменении(Элемент)
	
	ИспользоватьКлючевыеПоказателиЭффективностиУстановить(КонстантыНабор.ИспользоватьКлючевыеПоказателиЭффективности);
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.КлючевыеПоказателиЭффективности") Тогда 
		МодульКлючевыеПоказателиЭффективностиКлиентСервер = ОбщегоНазначенияКлиент.ОбщийМодуль("КлючевыеПоказателиЭффективностиКлиентСервер");
		МодульКлючевыеПоказателиЭффективностиКлиентСервер.ОбновитьПанельУправлениеПерсоналомДляКлючевыхПоказателейЭффективности(ЭтотОбъект);
	КонецЕсли;
	
	ЗаписатьНастройкиНаКлиенте("НастройкиКлючевыхПоказателейЭффективности");
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ИспользоватьКлючевыеПоказателиЭффективностиУстановить(Значение)
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.КлючевыеПоказателиЭффективности") Тогда 
		МодульКлючевыеПоказателиЭффективности = ОбщегоНазначения.ОбщийМодуль("КлючевыеПоказателиЭффективности");
		МодульКлючевыеПоказателиЭффективности.ПанельУправлениеПерсоналомЗаписатьКонстантуИспользоватьКлючевыеПоказателиЭффективности(Значение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиКлючевыхПоказателейЭффективностиИспользоватьРазныеГоризонтыОценкиПриИзменении(Элемент)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.КлючевыеПоказателиЭффективности") Тогда 
		МодульКлючевыеПоказателиЭффективностиКлиентСервер = ОбщегоНазначенияКлиент.ОбщийМодуль("КлючевыеПоказателиЭффективностиКлиентСервер");
		МодульКлючевыеПоказателиЭффективностиКлиентСервер.ОбновитьПанельУправлениеПерсоналомДляКлючевыхПоказателейЭффективности(ЭтотОбъект);
	КонецЕсли;
	
	ЗаписатьНастройкиНаКлиенте("НастройкиКлючевыхПоказателейЭффективности");
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
		
КонецПроцедуры

&НаКлиенте
Процедура НастройкиКлючевыхПоказателейЭффективностиИспользоватьГоризонтКварталПриИзменении(Элемент)
	
	ЗаписатьНастройкиНаКлиенте("НастройкиКлючевыхПоказателейЭффективности");
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиКлючевыхПоказателейЭффективностиИспользоватьГоризонтПолугодиеПриИзменении(Элемент)
	
	ЗаписатьНастройкиНаКлиенте("НастройкиКлючевыхПоказателейЭффективности");
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиКлючевыхПоказателейЭффективностиИспользоватьГоризонтГодПриИзменении(Элемент)
	
	ЗаписатьНастройкиНаКлиенте("НастройкиКлючевыхПоказателейЭффективности");
	ПодключитьОбработчикОжиданияОбновленияИнтерфейса();
	
КонецПроцедуры

&НаСервере
&Вместо("ЗаписатьНастройкиНаСервере")
Процедура Расш_ЗаписатьНастройкиНаСервере(ИмяНастройки)
	
	ПараметрыНастроек = Обработки.ПанельУправлениеПерсоналом.ЗаполнитьСтруктуруПараметровНастроек(ИмяНастройки);
		
	ПараметрыНастроек.ИспользоватьНачислениеЗарплаты         = ИспользоватьНачислениеЗарплаты;
	ПараметрыНастроек.НастройкиРасчетаЗарплаты               = ОбщегоНазначения.СтруктураПоМенеджеруЗаписи(НастройкиРасчетаЗарплаты, Метаданные.РегистрыСведений.НастройкиРасчетаЗарплатыРасширенный);
	ПараметрыНастроек.НастройкиЗаймовСотрудникам             = ОбщегоНазначения.СтруктураПоМенеджеруЗаписи(НастройкиЗаймовСотрудникам, Метаданные.РегистрыСведений.НастройкиЗаймовСотрудникам);
	ПараметрыНастроек.НастройкиВзаиморасчетовССотрудниками   = ОбщегоНазначения.СтруктураПоМенеджеруЗаписи(НастройкиВзаиморасчетовССотрудниками, Метаданные.РегистрыСведений.НастройкиВзаиморасчетовССотрудниками);
	ПараметрыНастроек.НастройкиСтатистикиПерсонала           = ОбщегоНазначения.СтруктураПоМенеджеруЗаписи(НастройкиСтатистикиПерсонала, Метаданные.РегистрыСведений.НастройкиСтатистикиПерсонала);
	ПараметрыНастроек.НастройкиУчетаВремени                  = ОбщегоНазначения.СтруктураПоМенеджеруЗаписи(НастройкиУчетаВремени, Метаданные.РегистрыСведений.НастройкиУчетаВремени);
	ПараметрыНастроек.НастройкиВзаиморасчетовПоПрочимДоходам = ОбщегоНазначения.СтруктураПоМенеджеруЗаписи(НастройкиВзаиморасчетовПоПрочимДоходам, Метаданные.РегистрыСведений.НастройкиВзаиморасчетовПоПрочимДоходам);
	
	ПараметрыНастроек.ИспользоватьСтатьиФинансирования       = ИспользоватьСтатьиФинансирования;
	ПараметрыНастроек.РаботаВБюджетномУчреждении             = РаботаВБюджетномУчреждении;  
	ПараметрыНастроек.ПоказателиСовокупнойТарифнойСтавки     = ПоказателиСовокупнойТарифнойСтавки.Выгрузить(Новый Структура("Выбран", Истина), "Показатель");
	ПараметрыНастроек.РассчитыватьДокументыПриРедактировании = РассчитыватьДокументыПриРедактировании;
	ПараметрыНастроек.ИспользуютсяСтавкиНДФЛМеждународныхДоговоров = ИспользуютсяСтавкиНДФЛМеждународныхДоговоров;
	
	УчетПоСтатьямФинансированияЗарплата.ЗначенияСохраняемыхРеквизитовФормыНастройкаПрограммы(ЭтаФорма, ПараметрыНастроек);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ГрантыНеоблагаемыеНДФЛ") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГрантыНеоблагаемыеНДФЛ");
		Модуль.ЗначенияСохраняемыхРеквизитовФормыНастройкаПрограммы(ЭтотОбъект, ПараметрыНастроек);
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.КлючевыеПоказателиЭффективности") Тогда 
		МодульКлючевыеПоказателиЭффективности = ОбщегоНазначения.ОбщийМодуль("КлючевыеПоказателиЭффективности");
		МодульКлючевыеПоказателиЭффективности.ПанельУправлениеПерсоналомЗаполнитьНастройкиКлючевыхПоказателейЭффективности(ЭтаФорма, ПараметрыНастроек);
	КонецЕсли;

	
	АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	Обработки.ПанельУправлениеПерсоналом.ЗаписатьНастройки(ПараметрыНастроек, АдресХранилища);
	ОбновитьПовторноИспользуемыеЗначения();

КонецПроцедуры

&НаСервере
&После("ПрочитатьНастройки")
Процедура Расш_ПрочитатьНастройки()
	
	СтрокаКонстант = "";
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.КлючевыеПоказателиЭффективности") Тогда 
		МодульКлючевыеПоказателиЭффективности = ОбщегоНазначения.ОбщийМодуль("КлючевыеПоказателиЭффективности");
		МодульКлючевыеПоказателиЭффективности.ПанельУправлениеПерсоналомДополнитьСтрокуКонстант(СтрокаКонстант);
	КонецЕсли;
	
	Настройка = Константы.СоздатьНабор(СтрокаКонстант);
	Настройка.Прочитать();
	ЗначениеВРеквизитФормы(Настройка, "КонстантыНабор");
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.КлючевыеПоказателиЭффективности") Тогда 
		МодульКлючевыеПоказателиЭффективности = ОбщегоНазначения.ОбщийМодуль("КлючевыеПоказателиЭффективности");
		МодульКлючевыеПоказателиЭффективности.ПанельУправлениеПерсоналомПрочитатьНастройкиКлючевыхПоказателейЭффективности(ЭтаФорма);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти