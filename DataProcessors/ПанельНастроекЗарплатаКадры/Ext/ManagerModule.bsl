
&Вместо("СтруктураПараметровНастроек")
Функция Расш_СтруктураПараметровНастроек()
		
	// ПараметрыНастроек – структура, 
	//		Ключ – имя настройки или действия
	//		Значение – тип Булево, если Истина, то эту настройку надо будет сохранить.
	
	ПараметрыНастроек = Новый Структура;
	ПараметрыНастроек.Вставить("СоздатьПВР", Ложь);
	
	// в ERP зарплата отключается вместе с кадрами
	ПараметрыНастроек.Вставить("ИспользоватьКадровыйУчет", Ложь);
	// Конец
	
	ПараметрыНастроек.Вставить("ИспользоватьНачислениеЗарплаты", Ложь);
	ПараметрыНастроек.Вставить("ИспользоватьУправленческуюЗарплату", Ложь);
	ПараметрыНастроек.Вставить("НастройкиРасчетаЗарплаты", Ложь);
	ПараметрыНастроек.Вставить("НастройкиУчетаВремени", Ложь);
	ПараметрыНастроек.Вставить("НастройкиКадровогоУчета", Ложь);
	ПараметрыНастроек.Вставить("НастройкиВоинскогоУчета", Ложь);
	ПараметрыНастроек.Вставить("НастройкиШтатногоРасписания", Ложь);
	ПараметрыНастроек.Вставить("НастройкиЗаймовСотрудникам", Ложь);
	ПараметрыНастроек.Вставить("ИспользоватьСтатьиФинансирования", Ложь);
	ПараметрыНастроек.Вставить("РаботаВБюджетномУчреждении", Ложь);
	ПараметрыНастроек.Вставить("НастройкиВзаиморасчетовССотрудниками", Ложь);
	ПараметрыНастроек.Вставить("НастройкиСтатистикиПерсонала", Ложь);
	ПараметрыНастроек.Вставить("НастройкиБюджетныхУчреждений", Ложь);
	ПараметрыНастроек.Вставить("ПоказателиСовокупнойТарифнойСтавки", Ложь); 
	ПараметрыНастроек.Вставить("РассчитыватьДокументыПриРедактировании", Ложь);
	ПараметрыНастроек.Вставить("ИспользоватьМедицинскоеСтрахованиеСотрудников", Ложь);
	ПараметрыНастроек.Вставить("ИспользоватьАттестацииСотрудников", Ложь);
	ПараметрыНастроек.Вставить("ИспользоватьОтдельныйДокументДляФормированияАттестационнойКомиссии", Ложь);
	ПараметрыНастроек.Вставить("НастройкиГосслужбы", Ложь);  
	ПараметрыНастроек.Вставить("НастройкиМедицинскогоУчреждения", Ложь); 
	ПараметрыНастроек.Вставить("НастройкиОбразовательногоУчреждения", Ложь);
	ПараметрыНастроек.Вставить("ИспользоватьСпециальностиФизическихЛиц", Ложь);
	ПараметрыНастроек.Вставить("ИспользоватьПодработки", Ложь);
	ПараметрыНастроек.Вставить("НастройкиВзаиморасчетовПоПрочимДоходам", Ложь);
	ПараметрыНастроек.Вставить("УчитыватьПрерываниеСтажейАвтоматически", Ложь);
	ПараметрыНастроек.Вставить("ИспользуютсяСтавкиНДФЛМеждународныхДоговоров", Ложь); 
	ПараметрыНастроек.Вставить("НастройкиКлючевыхПоказателейЭффективности", Ложь);
		
	НастройкиГосслужбы = Новый Структура("
	|ИспользоватьГосударственнуюСлужбу,
	|ИспользоватьМуниципальнуюСлужбу,
	|ИспользоватьУчетКлассныхЧинов,
	|НачислятьОкладЗаКлассныйЧинМуниципальнымСлужащим,
	|ИспользоватьВоеннуюСлужбу,
	|ИспользоватьРасчетДенежногоДовольствияВоеннослужащих,
	|ИспользоватьРасчетДенежногоДовольствияВоеннослужащихПоПризыву,
	|РазрешеноСовместительствоВоеннослужащимПоКонтракту,
	|ИспользоватьРасчетДенежногоСодержанияПрокуроров,
	|ПремияЗаДВСОРассчитываетсяПоОкладуНаНачалоМесяца,
	|ИспользоватьГосударственныеМуниципальныеДолжности,
	|ИспользоватьРасчетДенежногоСодержанияСудей,
	|ИспользоватьСохраняемоеДенежноеСодержаниеДолжностейГражданскойСлужбы,
	|ИспользоватьСохраняемоеДенежноеСодержаниеДолжностейГосударственнойСлужбы,
	|ИспользоватьСохраняемоеДенежноеСодержаниеСудей,
	|ИспользоватьРасчетСохраняемогоДенежногоСодержания,
	|ВыбиратьВариантРасчетаСреднего");
	
	НастройкиМедицинскогоУчреждения = Новый Структура("
	|РаботаВМедицинскомУчреждении,
	|ИспользоватьВыгрузкуВФедеральныйРегистрМедицинскихРаботников,
	|ИспользоватьТарификационнуюОтчетностьУчрежденийФМБА,
	|ИспользоватьДоступКНаркотическимСредствам,
	|ИспользоватьПодработки");
	
	НастройкиОбразовательногоУчреждения = Новый Структура("
	|РаботаВОбразовательномУчреждении,
	|НачисленияПреподавателей");
	
	// СтруктураПараметров – элементы структуры значения настроек для сохранения
	СтруктураПараметров = Новый Структура("
	|ПараметрыНастроек,
	|ИспользоватьКадровыйУчет,
	|ИспользоватьНачислениеЗарплаты,
	|ИспользоватьУправленческуюЗарплату,
	|НастройкиРасчетаЗарплаты,
	|НастройкиВзаиморасчетовПоПрочимДоходам,
	|НастройкиУчетаВремени,
	|НастройкиКадровогоУчета,
	|НастройкиВоинскогоУчета,
	|НастройкиШтатногоРасписания,
	|НастройкиЗаймовСотрудникам,
	|ИспользоватьСтатьиФинансирования,
	|РаботаВБюджетномУчреждении,
	|НастройкиВзаиморасчетовССотрудниками,
	|НастройкиСтатистикиПерсонала,
	|НастройкиБюджетныхУчреждений,
	|ПоказателиСовокупнойТарифнойСтавки,
	|РассчитыватьДокументыПриРедактировании,
	|ИспользоватьАттестацииСотрудников,
	|ИспользоватьМедицинскоеСтрахованиеСотрудников,
	|ИспользоватьОтдельныйДокументДляФормированияАттестационнойКомиссии,
	|НастройкиМедицинскогоУчреждения,
	|НастройкиГосслужбы,
	|НастройкиОбразовательногоУчреждения,
	|ИспользоватьСпециальностиФизическихЛиц,
	|ИспользоватьПодработки,
	|УчитыватьПрерываниеСтажейАвтоматически,
	|ИспользуютсяСтавкиНДФЛМеждународныхДоговоров,
	|НастройкиКлючевыхПоказателейЭффективности");

	
	
	СтруктураПараметров.ИспользоватьСтатьиФинансирования = ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата");
	СтруктураПараметров.РаботаВБюджетномУчреждении 	     = ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении");
	СтруктураПараметров.ПараметрыНастроек 				 = ПараметрыНастроек;
	СтруктураПараметров.НастройкиГосслужбы 				 = НастройкиГосслужбы;
	СтруктураПараметров.НастройкиМедицинскогоУчреждения	 = НастройкиМедицинскогоУчреждения;
	СтруктураПараметров.НастройкиОбразовательногоУчреждения	 = НастройкиОбразовательногоУчреждения;
	СтруктураПараметров.ИспользуютсяСтавкиНДФЛМеждународныхДоговоров = ПолучитьФункциональнуюОпцию("ИспользуютсяСтавкиНДФЛМеждународныхДоговоров");
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ГрантыНеоблагаемыеНДФЛ") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГрантыНеоблагаемыеНДФЛ");
		Модуль.ДополнитьСтруктуруПараметровНастроек(СтруктураПараметров);
	КонецЕсли;
	
	Возврат СтруктураПараметров;	

КонецФункции

&Вместо("ЗаписатьНастройки")
Процедура Расш_ЗаписатьНастройки(Параметры, АдресХранилища)

	НачатьТранзакцию();
	
	// ERP начало
	Если Параметры.Свойство("ИспользоватьНачислениеЗарплаты") Тогда
		
		НаборЗаписей = РегистрыСведений.НастройкиВзаиморасчетовПоПрочимДоходам.СоздатьНаборЗаписей();
		Настройка = НаборЗаписей.Добавить();
		Настройка.ИспользоватьВзаиморасчетыПоПрочимДоходам = Параметры.ИспользоватьНачислениеЗарплаты;
		Настройка.ИспользоватьВедомостиДляВыплатыПрочихДоходов = Параметры.ИспользоватьНачислениеЗарплаты;
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Записать();
		
	КонецЕсли;
	// ERP конец
	
	// Параметры описаны в СтруктураПараметровНастроек.
	ПараметрыНастроек = Параметры.ПараметрыНастроек;
	
	Если ПараметрыНастроек.ИспользоватьСпециальностиФизическихЛиц Тогда
		Константы.ИспользоватьСпециальностиФизическихЛиц.Установить(Параметры.ИспользоватьСпециальностиФизическихЛиц);
	КонецЕсли;
	
	Если ПараметрыНастроек.ИспользоватьПодработки Тогда
		Константы.ИспользоватьПодработки.Установить(Параметры.ИспользоватьПодработки);
	КонецЕсли; 
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.АвтоматическийРасчетСтажейФизическихЛиц") Тогда
		Если ПараметрыНастроек.УчитыватьПрерываниеСтажейАвтоматически Тогда
			МодульАвтоматическийРасчетСтажейФизическихЛиц = ОбщегоНазначения.ОбщийМодуль("АвтоматическийРасчетСтажейФизическихЛиц");
			МодульАвтоматическийРасчетСтажейФизическихЛиц.УстановитьЗначениеУчитыватьПрерываниеСтажейАвтоматически(Параметры.УчитыватьПрерываниеСтажейАвтоматически);
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыНастроек.ИспользоватьНачислениеЗарплаты Тогда
		Константы.ИспользоватьНачислениеЗарплаты.Установить(Параметры.ИспользоватьНачислениеЗарплаты);
	КонецЕсли;
	
	Если ПараметрыНастроек.ИспользоватьУправленческуюЗарплату Тогда
		Константы.ИспользоватьУправленческуюЗарплату.Установить(Параметры.ИспользоватьУправленческуюЗарплату);
	КонецЕсли;
	
	Если ПараметрыНастроек.ИспользоватьКадровыйУчет Тогда
		Если НЕ ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.КонфигурацииЗарплатаКадрыРасширенная") Тогда
			Константы.ИспользоватьКадровыйУчет.Установить(Параметры.ИспользоватьКадровыйУчет);
		КонецЕсли;
		// ERP начало
		Если Не Параметры.ИспользоватьКадровыйУчет Тогда
			Константы.ИспользоватьШтрихкодированиеПечатныхФормОбъектов.Установить(Параметры.ИспользоватьКадровыйУчет);
		КонецЕсли;
		// ERP конец		
	КонецЕсли;
	
	Если ПараметрыНастроек.РассчитыватьДокументыПриРедактировании Тогда
		Константы.РассчитыватьДокументыПриРедактировании.Установить(Параметры.РассчитыватьДокументыПриРедактировании);
	КонецЕсли;
	
	Если ПараметрыНастроек.НастройкиРасчетаЗарплаты Тогда
		
		Настройки = РегистрыСведений.НастройкиРасчетаЗарплатыРасширенный.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Настройки, Параметры.НастройкиРасчетаЗарплаты);
		Настройки.Записать();
		
		// Если изменили использование тарифных сеток, надо обновить использование показателя,
		// который используется если ведутся тарифные сетки.
		Справочники.ПоказателиРасчетаЗарплаты.СоздатьПоказательБазовыйТарифГруппы();
		Справочники.ПоказателиРасчетаЗарплаты.СоздатьПоказателиОтОбратного();
		
		РасчетыОтОбратного.УстановитьИспользованиеРасчетовОтОбратного(Настройки);
		
	КонецЕсли;
	
	Если ПараметрыНастроек.НастройкиУчетаВремени Тогда
		
		Настройки = РегистрыСведений.НастройкиУчетаВремени.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Настройки, Параметры.НастройкиУчетаВремени);
		Настройки.Записать();
		
	КонецЕсли;
	
	Если ПараметрыНастроек.НастройкиВзаиморасчетовПоПрочимДоходам Тогда
		
		Настройки = РегистрыСведений.НастройкиВзаиморасчетовПоПрочимДоходам.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Настройки, Параметры.НастройкиВзаиморасчетовПоПрочимДоходам);
		Настройки.Записать();
		
	КонецЕсли;
	
	Если ПараметрыНастроек.НастройкиЗаймовСотрудникам Тогда
		
		Настройки = РегистрыСведений.НастройкиЗаймовСотрудникам.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Настройки, Параметры.НастройкиЗаймовСотрудникам);
		Настройки.Записать();
		
	КонецЕсли;
	
	Если ПараметрыНастроек.НастройкиВзаиморасчетовССотрудниками ИЛИ (НЕ ПараметрыНастроек.РаботаВБюджетномУчреждении И ПараметрыНастроек.ИспользоватьСтатьиФинансирования) Тогда
		
		Настройки = РегистрыСведений.НастройкиВзаиморасчетовССотрудниками.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Настройки, Параметры.НастройкиВзаиморасчетовССотрудниками);
		Настройки.Записать();
		
	КонецЕсли;
	
	Если ПараметрыНастроек.НастройкиСтатистикиПерсонала ИЛИ (НЕ ПараметрыНастроек.РаботаВБюджетномУчреждении И ПараметрыНастроек.ИспользоватьСтатьиФинансирования) Тогда
		
		Настройки = РегистрыСведений.НастройкиСтатистикиПерсонала.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Настройки, Параметры.НастройкиСтатистикиПерсонала);
		Настройки.Записать();
		
	КонецЕсли;
	
	Если ПараметрыНастроек.НастройкиКадровогоУчета Тогда
		
		Настройки = РегистрыСведений.НастройкиКадровогоУчета.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Настройки, Параметры.НастройкиКадровогоУчета);
		Настройки.Записать();
		
	КонецЕсли;
	
	Если ПараметрыНастроек.НастройкиВоинскогоУчета Тогда
		
		Настройки = РегистрыСведений.НастройкиВоинскогоУчета.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Настройки, Параметры.НастройкиВоинскогоУчета);
		Настройки.Записать();
		
	КонецЕсли;
	
	Если ПараметрыНастроек.ПоказателиСовокупнойТарифнойСтавки Тогда 
		
		Настройки = РегистрыСведений.ПоказателиСовокупнойТарифнойСтавкиСотрудников.СоздатьНаборЗаписей();
		Настройки.Загрузить(Параметры.ПоказателиСовокупнойТарифнойСтавки);
		Настройки.Записать();
		
	КонецЕсли;
	
	УчетПоСтатьямФинансированияЗарплата.ЗаписатьНастройкиНастройкаПрограммы(Параметры);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ГрантыНеоблагаемыеНДФЛ") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГрантыНеоблагаемыеНДФЛ");
		Модуль.ЗаписатьНастройкиПрограммы(Параметры);
	КонецЕсли;
	
	// Если изменили использование расчета зарплаты, надо обновить использование отпусков без оплаты,
	// которые используются безусловно если ведется только кадровый учет.
	Если ПараметрыНастроек.ИспользоватьНачислениеЗарплаты Тогда
		Справочники.ВидыОтпусков.СоздатьВидыОтпусковПоНастройкам();
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.АттестацииСотрудников") Тогда
		
		Модуль = ОбщегоНазначения.ОбщийМодуль("АттестацииСотрудников");
		
		Если ПараметрыНастроек.ИспользоватьАттестацииСотрудников Тогда
			Модуль.УстановитьИспользованиеАттестаций(Параметры.ИспользоватьАттестацииСотрудников);
		КонецЕсли;
		
		Если ПараметрыНастроек.ИспользоватьОтдельныйДокументДляФормированияАттестационнойКомиссии Тогда
			Модуль.УстановитьИспользованиеОтдельногоДокументаДляФормированияАттестационнойКомиссии(Параметры.ИспользоватьОтдельныйДокументДляФормированияАттестационнойКомиссии);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.МедицинскоеСтрахование") Тогда
		
		Модуль = ОбщегоНазначения.ОбщийМодуль("МедицинскоеСтрахование");
		
		Если ПараметрыНастроек.ИспользоватьМедицинскоеСтрахованиеСотрудников Тогда
			Модуль.УстановитьИспользованиеМедицинскогоСтрахования(Параметры.ИспользоватьМедицинскоеСтрахованиеСотрудников);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") Тогда
		
		Если ПараметрыНастроек.НастройкиГосслужбы Тогда
			Модуль = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужба");
			Модуль.ЗаписатьНастройкиГосслужбы(Параметры.НастройкиГосслужбы);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.Медицина") Тогда
		
		Если ПараметрыНастроек.НастройкиМедицинскогоУчреждения Тогда
			Модуль = ОбщегоНазначения.ОбщийМодуль("Медицина");
			Модуль.ЗаписатьНастройкиМедицинскогоУчреждения(Параметры.НастройкиМедицинскогоУчреждения);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОбразовательныеУчреждения") Тогда
		
		Если ПараметрыНастроек.НастройкиОбразовательногоУчреждения Тогда
			Модуль = ОбщегоНазначения.ОбщийМодуль("ОбразовательныеУчреждения");
			Модуль.ЗаписатьНастройкиОбразовательногоУчреждения(Параметры.НастройкиОбразовательногоУчреждения);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПараметрыНастроек.СоздатьПВР Тогда
		
		ПараметрыПланВидовРасчета = РасчетЗарплатыРасширенный.ОписаниеПараметровПланаВидовРасчета();
		
		Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.НачальнаяНастройкаПрограммы") Тогда
			Модуль = ОбщегоНазначения.ОбщийМодуль("НачальнаяНастройкаПрограммы");
			Модуль.ЗаполнитьПараметрыПланВидовРасчетаСохраненнымиЗначениями(ПараметрыПланВидовРасчета);
		КонецЕсли;
		
		РасчетЗарплатыРасширенный.СформироватьПланВидовРасчетаПоНастройкам(ПараметрыПланВидовРасчета);
		
		Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.НачальнаяНастройкаПрограммы") Тогда
			Модуль = ОбщегоНазначения.ОбщийМодуль("НачальнаяНастройкаПрограммы");
			Модуль.НачальнаяНастройкаПрограммыСохранитьНастройки(ПараметрыПланВидовРасчета);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПараметрыНастроек.ИспользуютсяСтавкиНДФЛМеждународныхДоговоров Тогда
		Константы.ИспользуютсяСтавкиНДФЛМеждународныхДоговоров.Установить(Параметры.ИспользуютсяСтавкиНДФЛМеждународныхДоговоров);
	КонецЕсли;
	
	ЗарплатаКадрыОтчеты.ОчиститьМакетыКомпоновкиДанных();
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.КлючевыеПоказателиЭффективности") Тогда 
		Модуль = ОбщегоНазначения.ОбщийМодуль("КлючевыеПоказателиЭффективности");
		Модуль.ПанельНастроекЗарплатаКадрыЗаписатьНастройкиКлючевыхПоказателейЭффективности(Параметры, ПараметрыНастроек);
	КонецЕсли;
	
	ЗафиксироватьТранзакцию();
	
	// Метод применения настроек штатного расписания вызываем вне транзакции 
	//	т.к. при записи настроек записываются только настройки штатного расписания.
	Если ПараметрыНастроек.НастройкиШтатногоРасписания Тогда
		
		Настройки = РегистрыСведений.НастройкиШтатногоРасписания.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Настройки, Параметры.НастройкиШтатногоРасписания);
		УправлениеШтатнымРасписанием.ЗаписатьНастройкиШтатногоРасписания(Настройки);
		
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(Истина, АдресХранилища);
	
КонецПроцедуры
