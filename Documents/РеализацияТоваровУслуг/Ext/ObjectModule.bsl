&После("ОбработкаПроведения")
Процедура Расш_ОбработкаПроведения(Отказ, РежимПроведения)  
	
	Если ЗначениеЗаполнено(Соглашение) Тогда
		
		//  1. Получение запросом данных документа
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Товары.Ссылка.Соглашение КАК Соглашение,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	СУММА(Товары.Количество) КАК Количество
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	Товары.Номенклатура,
		|	Товары.Ссылка.Соглашение,
		|	Товары.Характеристика
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Соглашение,
		|	Номенклатура,
		|	Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Количество КАК Количество,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Соглашение КАК Соглашение
		|ИЗ
		|	Товары КАК Товары";
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		РезультатЗапроса = Запрос.Выполнить();
		
		//  2. Формирование движений-расход регистра
		Движения.СвободныеОстатки.Очистить();
		ВыборкаТовары = РезультатЗапроса.Выбрать();
		Пока ВыборкаТовары.Следующий() Цикл
			Движение = Движения.bos_ОстаткиТоваровПоСоглашениям.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.СоглашенияСКлиентами = Соглашение;
			Движение.Номенклатура = ВыборкаТовары.Номенклатура;
			Движение.Характеристика = ВыборкаТовары.Характеристика;
			Движение.Количество = ВыборкаТовары.Количество;
		КонецЦикла;
		
		//  3. Запись движений в БД
		Движения.bos_ОстаткиТоваровПоСоглашениям.Записывать = Истина;
		Движения.Записать();
		
		//  4. Запрос, получающий отрицательные остатки из регистра
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Остатки.Номенклатура КАК Номенклатура,
		|	Остатки.Характеристика КАК Характеристика,
		|	-Остатки.КоличествоОстаток КАК Дефицит,
		|	Остатки.СоглашенияСКлиентами КАК СоглашенияСКлиентами,
		|	Остатки.СоглашенияСКлиентами.Представление КАК СоглашенияСКлиентамиПредставление,
		|	Остатки.Номенклатура.Представление КАК НоменклатураПредставление
		|ИЗ
		|	РегистрНакопления.bos_ОстаткиТоваровПоСоглашениям.Остатки(
		|			&МоментВремени,
		|			(Номенклатура, Характеристика) В
		|				(ВЫБРАТЬ
		|					Товары.Номенклатура КАК Номенклатура,
		|					Товары.Характеристика КАК Характеристика
		|				ИЗ
		|					Товары КАК Товары)) КАК Остатки
		|ГДЕ
		|	Остатки.КоличествоОстаток < 0";
		
		ГраницаКонтроля = Новый Граница(МоментВремени(), ВидГраницы.Включая);
		Запрос.УстановитьПараметр("МоментВремени", ГраницаКонтроля);
		РезультатЗапроса = Запрос.Выполнить();
		
		//  5. Вывод сообщений о недостатке товаров
		Если Не РезультатЗапроса.Пустой() Тогда
			Отказ = Истина;
			ВыборкаОшибки = РезультатЗапроса.Выбрать();
			Пока ВыборкаОшибки.Следующий() Цикл
				Сообщение = Новый СообщениеПользователю;
				
				МассивСтрок = Товары.НайтиСтроки(Новый Структура("Номенклатура, Характеристика", ВыборкаОшибки.Номенклатура, ВыборкаОшибки.Характеристика)); 
				Если МассивСтрок.Количество() <> 0 Тогда
					
					Для каждого Элем Из МассивСтрок Цикл
					
					Сообщение.Текст = "По соглашению " + ВыборкаОшибки.СоглашенияСКлиентамиПредставление 
					+ ": товара " + ВыборкаОшибки.Номенклатура 
					+ " недостаточно в количестве " + ВыборкаОшибки.Дефицит+" шт.";	
					
					Сообщение.Поле = "Объект.Товары["+Элем.НомерСтроки+"].Номенклатура";
					Сообщение.Сообщить();
					
					КонецЦикла;	
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры