
Функция СведенияОВнешнейОбработке() Экспорт

ПараметрыРегистрации = Новый Структура;
МассивНазначений = Новый Массив;
МассивНазначений.Добавить("");

ИмяОтчета = Метаданные().Представление();

ПараметрыРегистрации.Вставить("Вид", "ДополнительныйОтчет");
ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
ПараметрыРегистрации.Вставить("Наименование", ИмяОтчета);
ПараметрыРегистрации.Вставить("Версия", "1.0");
ПараметрыРегистрации.Вставить("БезопасныйРежим", Истина);
ПараметрыРегистрации.Вставить("Информация", "Дополнительный отчет");

ТаблицаКоманд = ПолучитьТаблицуКоманд();

ДобавитьКоманду(ТаблицаКоманд, ИмяОтчета, Метаданные().ПолноеИмя(), "ОткрытиеФормы", Истина);

ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);

Возврат ПараметрыРегистрации;
КонецФункции

Функция ПолучитьТаблицуКоманд()
Команды = Новый ТаблицаЗначений;
Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
Возврат Команды;
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь,Модификатор = "")
НоваяКоманда = ТаблицаКоманд.Добавить();
НоваяКоманда.Представление = Представление;
НоваяКоманда.Идентификатор = Идентификатор;
НоваяКоманда.Использование = Использование;
НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
НоваяКоманда.Модификатор = Модификатор;
КонецПроцедуры

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//	Форма        - УправляемаяФорма - форма отчета,
//	КлючВарианта - Строка           - имя предопределенного варианта отчета или уникальный идентификатор,
//	Настройки    - Структура        - см. возвращаемое значение ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПриСозданииНаСервере = Истина;
	
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//	Форма                - УправляемаяФорма - форма отчета,
//	Отказ                - Булево           - передается из параметров обработчика "как есть",
//	СтандартнаяОбработка - Булево           - передается из параметров обработчика "как есть".
//
// См. также:
//	"УправляемаяФорма.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	Параметры = ЭтаФорма.Параметры;
	
	Если Параметры.Свойство("ПараметрКоманды")
		И Параметры.Свойство("ПараметрыОтчет")
		И Параметры.ПараметрыОтчет.ДополнительныеПараметры.Свойство("ИмяКоманды") Тогда
		
		Если Параметры.ПараметрыОтчет.ДополнительныеПараметры.ИмяКоманды = "ПоНоменклатуре" Тогда
			ЭтаФорма.ФормаПараметры.Отбор.Вставить("Номенклатура", Параметры.ПараметрКоманды);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьЗаголовкиПолей()
	Если НЕ ОбщегоНазначенияПовтИсп.ДоступноИспользованиеРазделенныхДанных() Тогда
		Возврат;
	КонецЕсли;
	
	ВалютаУправленческогоУчета = Строка(Константы.ВалютаУправленческогоУчета.Получить());

	Для каждого НаборДанных из СхемаКомпоновкиДанных.НаборыДанных Цикл
		Для каждого ПолеНабораДанных из НаборДанных.Поля Цикл
			Если СтрНайти(ПолеНабораДанных.Заголовок, "%ВалютаУпр%") > 0 Тогда
				ПолеНабораДанных.Заголовок = СтрЗаменить(ПолеНабораДанных.Заголовок, "%ВалютаУпр%", ВалютаУправленческогоУчета);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Для каждого ВычисляемоеПоле из СхемаКомпоновкиДанных.ВычисляемыеПоля Цикл
		Если СтрНайти(ВычисляемоеПоле.Заголовок, "%ВалютаУпр%") > 0 Тогда
			ВычисляемоеПоле.Заголовок = СтрЗаменить(ВычисляемоеПоле.Заголовок, "%ВалютаУпр%", ВалютаУправленческогоУчета);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
			
	ПараметрКомпоновки = Новый ПараметрКомпоновкиДанных("Период");
	ПараметрПериод = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ПараметрКомпоновки);
	
	ПараметрНачалоПериода = Новый ПараметрКомпоновкиДанных("НачалоПериода");
	ПараметрНачалоПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ПараметрНачалоПериода);
	ПараметрКонецПериода = Новый ПараметрКомпоновкиДанных("КонецПериода");
	ПараметрКонецПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ПараметрКонецПериода); 
	
	ПараметрТекДата = Новый ПараметрКомпоновкиДанных("ТекДата");
	ПараметрТекДата = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ПараметрТекДата);
	
	Если ЗначениеЗаполнено(ПараметрПериод.ИдентификаторПользовательскойНастройки) Тогда
		
		ПользовательскийПараметр = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(
		ПараметрПериод.ИдентификаторПользовательскойНастройки);
		Если ТипЗнч(ПользовательскийПараметр) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
			
			ПараметрПериод.Значение.ДатаНачала = ПользовательскийПараметр.Значение.ДатаНачала;
			ПараметрПериод.Значение.ДатаОкончания = ПользовательскийПараметр.Значение.ДатаОкончания;
			
			ПараметрНачалоПериода.Значение = ПользовательскийПараметр.Значение.ДатаНачала;
			ПараметрКонецПериода.Значение = ПользовательскийПараметр.Значение.ДатаОкончания;
			ПараметрТекДата.Значение = ТекущаяДата();
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрКомпоновки = Новый ПараметрКомпоновкиДанных("ПредыдущийМесяц");
	ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ПараметрКомпоновки);
	ПараметрСКД.Значение = ДобавитьМесяц(ПараметрПериод.Значение.ДатаНачала, -1);
	ПараметрСКД.Использование = Истина;   
	
	Если ЗначениеЗаполнено(ПараметрСКД.ИдентификаторПользовательскойНастройки) Тогда
		
		ПользовательскийПараметр = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(
		ПараметрСКД.ИдентификаторПользовательскойНастройки);
		Если ТипЗнч(ПользовательскийПараметр) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
			ПользовательскийПараметр.Значение = ПараметрСКД.Значение;
		КонецЕсли;
		
	КонецЕсли;

	ПараметрКомпоновки = Новый ПараметрКомпоновкиДанных("МесяцДоПредыдущего");
	ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ПараметрКомпоновки);
	ПараметрСКД.Значение = ДобавитьМесяц(ПараметрПериод.Значение.ДатаНачала, -2);
	ПараметрСКД.Использование = Истина;   
	
	Если ЗначениеЗаполнено(ПараметрСКД.ИдентификаторПользовательскойНастройки) Тогда
		
		ПользовательскийПараметр = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(
		ПараметрСКД.ИдентификаторПользовательскойНастройки);
		Если ТипЗнч(ПользовательскийПараметр) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
			ПользовательскийПараметр.Значение = ПараметрСКД.Значение;
		КонецЕсли;
		
	КонецЕсли;
		
	МассивХарактеристик  = Новый Массив;
	МассивХарактеристик.Добавить(ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "Сервисник_d817b8fc689b4320bf280472de6e9a0e"));
	МассивХарактеристик.Добавить(ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "Менеджер_4cdda05ecdf5480291eb41e12afd1c1c")); 
	
	ПараметрКомпоновки = Новый ПараметрКомпоновкиДанных("Свойство");
	ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ПараметрКомпоновки);
	ПараметрСКД.Значение.ЗагрузитьЗначения(МассивХарактеристик);
	ПараметрСКД.Использование = Истина;   
	
	Если ЗначениеЗаполнено(ПараметрСКД.ИдентификаторПользовательскойНастройки) Тогда
		
		ПользовательскийПараметр = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(
		ПараметрСКД.ИдентификаторПользовательскойНастройки);
		Если ТипЗнч(ПользовательскийПараметр) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
			ПользовательскийПараметр.Значение = ПараметрСКД.Значение;
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

УстановитьЗаголовкиПолей();

#КонецОбласти

#КонецЕсли