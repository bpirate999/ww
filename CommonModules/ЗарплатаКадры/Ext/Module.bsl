Процедура ДобавитьПараметрОтбора(СтруктураПараметровОтбора, ИмяПараметра, ОписаниеТипа,	Представление = Неопределено,
	ИмяМодификации = "") Экспорт
	
	ОписаниеПараметра = Новый Структура;
	ОписаниеПараметра.Вставить("ТипПараметра", ОписаниеТипа);
	ОписаниеПараметра.Вставить("ПредставлениеПараметра", ?(Представление = Неопределено, ИмяПараметра, Представление));
	
	ЗарплатаКадрыВнутренний.ДополнитьОписаниеМодифицирующегоПараметраОтбора(
		ИмяПараметра, ОписаниеПараметра, ИмяМодификации);
	
	СтруктураПараметровОтбора.Вставить(ИмяПараметра, ОписаниеПараметра);
	
КонецПроцедуры

// Создает элементы формы для группы настроек отбора.
//		СписокНастройкиОтбораНадпись
//		НаименованиеРеквизитаФормыДинамическийСписок
//		ПараметрыКритерияОтбора
//
// Параметры:
//		Форма - Форма, где располагается динамический список
//		НаименованиеРеквизитаСписок - Наименование реквизита формы "Динамический список"
//		ГруппаНастроек - Наименование группы, где будут отображаться недоступные пользователю настройки отбора в динамическом списке
//		ПараметрыКритерияОтбора - структура имен параметров, указанных в тексте запроса динамического списка,
//									элементы для заполнения параметров будут выведены на форму
//									Ключ - имя параметра, Значение - описание типов параметра
//		ГруппаПараметровКритерияОтбора - Наименование группы, где будут выведены параметры критериев отбора
//		ИсключаемыеИменаОтборов - Строка - Имена отборов, исключаемых из надписи, разделенные запятой
//		ЗаполнятьПользовательскийОтборПоОрганизации - Булево - Если Истина, то пользовательский отбор по организации будет заполнен организацией по умолчанию.
//
Процедура Расш_ПриСозданииНаСервереФормыСДинамическимСписком(Форма, НаименованиеРеквизитаСписок, ГруппаНастроек = "СписокНастройкиОтбора",
	ПараметрыКритерияОтбора = Неопределено, ГруппаПараметровКритерияОтбора = Неопределено, ИсключаемыеИменаОтборов = "", ЗаполнятьПользовательскийОтборПоОрганизации = Истина) Экспорт
	
	Элементы = Форма.Элементы;
	ГруппаНастроек = Элементы[ГруппаНастроек];
	Список = Форма[НаименованиеРеквизитаСписок];
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("СписокНастройкиОтбораНадпись", Новый ОписаниеТипов("Строка")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("НаименованиеРеквизитаФормыДинамическийСписок", Новый ОписаниеТипов("Строка")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("СинонимыЭлементовОтбора", Новый ОписаниеТипов("СписокЗначений")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИспользоватьНесколькоОрганизацийЗарплатаКадрыБазовая", Новый ОписаниеТипов("Булево")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИсключаемыеИменаОтборов", Новый ОписаниеТипов("Строка")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ЗаполнятьПользовательскийОтборПоОрганизации", Новый ОписаниеТипов("Булево")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИмяПоляОрганизация", Новый ОписаниеТипов("Строка")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИспользоватьКритерийОтбора", Новый ОписаниеТипов("Булево")));
	
	ТипОбъекта = ТипЗнч(ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(Форма.ИмяФормы));
	МетаданныеОбъекта = Метаданные.НайтиПоТипу(ТипОбъекта);
	ЭтоЖурналДокументов = ОбщегоНазначения.ЭтоЖурналДокументов(МетаданныеОбъекта);
	
	Если ЭтоЖурналДокументов Тогда
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ТипыОбъектовОповещения", Новый ОписаниеТипов("СписокЗначений")));
	КонецЕсли;
	
	Если ПараметрыКритерияОтбора <> Неопределено Тогда
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПараметрыКритерияОтбора", Новый ОписаниеТипов("ТаблицаЗначений")));
		
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИмяПараметра", Новый ОписаниеТипов("Строка"), "ПараметрыКритерияОтбора"));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПредставлениеПараметра", Новый ОписаниеТипов("Строка"), "ПараметрыКритерияОтбора"));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ТипПараметра", Новый ОписаниеТипов("ОписаниеТипов"), "ПараметрыКритерияОтбора"));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИмяРеквизитаФормыПараметра", Новый ОписаниеТипов("Строка"), "ПараметрыКритерияОтбора"));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИмяРеквизитаФормыПараметраИспользование", Новый ОписаниеТипов("Строка"), "ПараметрыКритерияОтбора"));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИмяЭлементаФормыПараметра", Новый ОписаниеТипов("Строка"), "ПараметрыКритерияОтбора"));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИмяЭлементаФормыПараметраИспользование", Новый ОписаниеТипов("Строка"), "ПараметрыКритерияОтбора"));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИмяМодификации", Новый ОписаниеТипов("Строка"), "ПараметрыКритерияОтбора"));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПараметрыМодификации", Новый ОписаниеТипов(), "ПараметрыКритерияОтбора"));
		
		ТаблицаПараметрыКритериевОтбора = Новый ТаблицаЗначений;
		ТаблицаПараметрыКритериевОтбора.Колонки.Добавить("ИмяПараметра", Новый ОписаниеТипов("Строка"));
		ТаблицаПараметрыКритериевОтбора.Колонки.Добавить("ПредставлениеПараметра", Новый ОписаниеТипов("Строка"));
		ТаблицаПараметрыКритериевОтбора.Колонки.Добавить("ТипПараметра", Новый ОписаниеТипов("ОписаниеТипов"));
		ТаблицаПараметрыКритериевОтбора.Колонки.Добавить("ИмяРеквизитаФормыПараметра", Новый ОписаниеТипов("Строка"));
		ТаблицаПараметрыКритериевОтбора.Колонки.Добавить("ИмяРеквизитаФормыПараметраИспользование", Новый ОписаниеТипов("Строка"));
		ТаблицаПараметрыКритериевОтбора.Колонки.Добавить("ИмяЭлементаФормыПараметра", Новый ОписаниеТипов("Строка"));
		ТаблицаПараметрыКритериевОтбора.Колонки.Добавить("ИмяЭлементаФормыПараметраИспользование", Новый ОписаниеТипов("Строка"));
		ТаблицаПараметрыКритериевОтбора.Колонки.Добавить("ИмяМодификации", Новый ОписаниеТипов("Строка"));
		ТаблицаПараметрыКритериевОтбора.Колонки.Добавить("ПараметрыМодификации", Новый ОписаниеТипов());
		
		Для каждого ПараметрКритерияОтбора Из ПараметрыКритерияОтбора Цикл
			
			ИдПараметра = СтрЗаменить(Строка(Новый УникальныйИдентификатор), "-", "x");
			
			ОписаниеПараметра = ПараметрКритерияОтбора.Значение;
			ИмяРеквизитаФормы = ПараметрКритерияОтбора.Ключ + "_" + ИдПараметра;
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизитаФормы, ОписаниеПараметра.ТипПараметра));
			
			НоваяСтрокаПараметра = ТаблицаПараметрыКритериевОтбора.Добавить();
			НоваяСтрокаПараметра.ПредставлениеПараметра = ОписаниеПараметра.ПредставлениеПараметра;
			НоваяСтрокаПараметра.ИмяПараметра = ПараметрКритерияОтбора.Ключ;
			НоваяСтрокаПараметра.ТипПараметра = ОписаниеПараметра.ТипПараметра;
			НоваяСтрокаПараметра.ИмяРеквизитаФормыПараметра = ИмяРеквизитаФормы;
			
			ОписаниеПараметра.Свойство("ИмяМодификации", НоваяСтрокаПараметра.ИмяМодификации);
			
			ИмяРеквизитаФормы = ПараметрКритерияОтбора.Ключ + "_Использование_" + ИдПараметра;
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизитаФормы, Новый ОписаниеТипов("Булево")));
			
			НоваяСтрокаПараметра.ИмяРеквизитаФормыПараметраИспользование = ИмяРеквизитаФормы;
		КонецЦикла;
	КонецЕсли;
	
	МассивИменРеквизитовФормы = Новый Массив;
	ЗаполнитьМассивИменРеквизитовФормы(Форма, МассивИменРеквизитовФормы);
	ИзменитьРеквизитыФормы(Форма, ДобавляемыеРеквизиты, МассивИменРеквизитовФормы);
	
	// Надпись отборов, не доступных пользователю
	Если Элементы.Найти("СписокНастройкиОтбораНадпись") = Неопределено Тогда
		Элемент = Элементы.Добавить("СписокНастройкиОтбораНадпись", Тип("ПолеФормы"), ГруппаНастроек);
		Элемент.ПутьКДанным = "СписокНастройкиОтбораНадпись";
		Элемент.Вид = ВидПоляФормы.ПолеНадписи;
		Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элемент.ЦветТекста = ЦветаСтиля.ПоясняющийТекст;
		Элемент.ЦветФона = ЦветаСтиля.ЦветФонаПодсказки;
		Элемент.АвтоМаксимальнаяШирина = Ложь;
	КонецЕсли;
	
	Если ЭтоЖурналДокументов Тогда
		Для Каждого РегистрируемыйДокумент Из МетаданныеОбъекта.РегистрируемыеДокументы Цикл
			Форма.ТипыОбъектовОповещения.Добавить(
				ТипЗнч(ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(РегистрируемыйДокумент.ПолноеИмя()).ПустаяСсылка()));
		КонецЦикла;
	КонецЕсли;
	
	Если ПараметрыКритерияОтбора <> Неопределено И ГруппаПараметровКритерияОтбора <> Неопределено Тогда
		
		ГруппаПараметровКритерияОтбора = Элементы[ГруппаПараметровКритерияОтбора];
		ГруппаПараметровКритерияОтбора.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ЛеваяГруппаПараметров = Неопределено;
		ПраваяГруппаПараметров = Неопределено;
		НомерПараметра = 0;
		Для каждого ПараметрКритерияОтбора Из ПараметрыКритерияОтбора Цикл
			НомерПараметра = НомерПараметра + 1;
			Если НомерПараметра/2 = Цел(НомерПараметра/2) Тогда
				Если ПраваяГруппаПараметров = Неопределено Тогда
					ИмяГруппы = "ПраваяГруппаПараметров" + "_" + СтрЗаменить(Строка(Новый УникальныйИдентификатор), "-", "x");
					ПраваяГруппаПараметров = Элементы.Добавить(ИмяГруппы, Тип("ГруппаФормы"), ГруппаПараметровКритерияОтбора);
					ПраваяГруппаПараметров.Вид = ВидГруппыФормы.ОбычнаяГруппа;
					ПраваяГруппаПараметров.Отображение = ОтображениеОбычнойГруппы.Нет;
					ПраваяГруппаПараметров.Заголовок = НСтр("ru = 'Правая группа'");
					ПраваяГруппаПараметров.ОтображатьЗаголовок = Ложь;
					ПраваяГруппаПараметров.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
				КонецЕсли;
				ГруппаТекущегоПараметра = ПраваяГруппаПараметров;
			Иначе
				Если ЛеваяГруппаПараметров = Неопределено Тогда
					ИмяГруппы = "ЛеваяГруппаПараметров" + "_" + СтрЗаменить(Строка(Новый УникальныйИдентификатор), "-", "x");
					ЛеваяГруппаПараметров = Элементы.Добавить(ИмяГруппы, Тип("ГруппаФормы"), ГруппаПараметровКритерияОтбора);
					ЛеваяГруппаПараметров.Вид = ВидГруппыФормы.ОбычнаяГруппа;
					ЛеваяГруппаПараметров.Отображение = ОтображениеОбычнойГруппы.Нет;
					ЛеваяГруппаПараметров.Заголовок = НСтр("ru = 'Левая группа'");
					ЛеваяГруппаПараметров.ОтображатьЗаголовок = Ложь;
					ЛеваяГруппаПараметров.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
				КонецЕсли;
				ГруппаТекущегоПараметра = ЛеваяГруппаПараметров;
			КонецЕсли;
			
			ИдПараметра = СтрЗаменить(Строка(Новый УникальныйИдентификатор), "-", "x");
			ОписаниеПараметра = ПараметрКритерияОтбора.Значение;
			
			ИмяГруппы = "ГруппаПараметра" + "_" + ИдПараметра;
			ГруппаТекущегоПараметра = Элементы.Добавить(ИмяГруппы, Тип("ГруппаФормы"), ГруппаТекущегоПараметра);
			ГруппаТекущегоПараметра.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ГруппаТекущегоПараметра.Отображение = ОтображениеОбычнойГруппы.Нет;
			ГруппаТекущегоПараметра.Заголовок = ОписаниеПараметра.ПредставлениеПараметра;
			ГруппаТекущегоПараметра.ОтображатьЗаголовок = Ложь;
			ГруппаТекущегоПараметра.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
			
			ИмяЭлементаФормы = ПараметрКритерияОтбора.Ключ + "_Использование_" + ИдПараметра;
			СтрокаПараметра = ТаблицаПараметрыКритериевОтбора.Найти(ПараметрКритерияОтбора.Ключ, "ИмяПараметра");
			СтрокаПараметра.ИмяЭлементаФормыПараметраИспользование = ИмяЭлементаФормы;
			Элемент = Элементы.Добавить(ИмяЭлементаФормы, Тип("ПолеФормы"), ГруппаТекущегоПараметра);
			Элемент.ПутьКДанным = СтрокаПараметра.ИмяРеквизитаФормыПараметраИспользование;
			Элемент.Вид = ВидПоляФормы.ПолеФлажка;
			Элемент.Заголовок = ОписаниеПараметра.ПредставлениеПараметра;
			Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ПараметрОтбораПриИзменении");
			
			ИмяЭлементаФормы = ПараметрКритерияОтбора.Ключ + "_" + ИдПараметра;
			СтрокаПараметра.ИмяЭлементаФормыПараметра = ИмяЭлементаФормы;
			Элемент = Элементы.Добавить(ИмяЭлементаФормы, Тип("ПолеФормы"), ГруппаТекущегоПараметра);
			Элемент.ПутьКДанным = СтрокаПараметра.ИмяРеквизитаФормыПараметра;
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.РастягиватьПоГоризонтали = Истина;
			Элемент.Заголовок = НСтр("ru = 'Значение'");
			Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ПараметрОтбораПриИзменении");
			
			ЗарплатаКадрыВнутренний.НастроитьМодифицирующийПараметрОтбора(СтрокаПараметра, Список, МетаданныеОбъекта, Элементы);

		КонецЦикла;
	КонецЕсли;
	
	Форма.НаименованиеРеквизитаФормыДинамическийСписок = НаименованиеРеквизитаСписок;
	Если ПараметрыКритерияОтбора <> Неопределено Тогда
		Форма.ИспользоватьКритерийОтбора = Истина;
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаПараметрыКритериевОтбора, Форма.ПараметрыКритерияОтбора);
	КонецЕсли;
	
	// Заполним синонимы элементов отбора по пути к данным элементов формы
	Для каждого ЭлементФормы Из Элементы Цикл
		Если ТипЗнч(ЭлементФормы) <> Тип("ПолеФормы") Тогда
			Продолжить;
		КонецЕсли;
		Форма.СинонимыЭлементовОтбора.Добавить(ЭлементФормы.ПутьКДанным, ЭлементФормы.Заголовок);
	КонецЦикла;
	
	// Заполним синонимы элементов отбора по реквизитам объекта
	Коллекция = ?(ЭтоЖурналДокументов, МетаданныеОбъекта.Графы, МетаданныеОбъекта.Реквизиты);
	
	Для каждого ЭлементКоллекции Из Коллекция Цикл
		Форма.СинонимыЭлементовОтбора.Добавить(ЭлементКоллекции.Имя, ЭлементКоллекции.Синоним);
	КонецЦикла;
	
	// Заполним синонимы элементов отбора по стандартным реквизитам объекта
	Для каждого ЭлементКоллекции Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
		Форма.СинонимыЭлементовОтбора.Добавить(ЭлементКоллекции.Имя, ЭлементКоллекции.Синоним);
	КонецЦикла;
	
	Форма.ИспользоватьНесколькоОрганизацийЗарплатаКадрыБазовая = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизацийЗарплатаКадрыБазовая");
	Форма.ИсключаемыеИменаОтборов = ИсключаемыеИменаОтборов;
	Форма.ЗаполнятьПользовательскийОтборПоОрганизации = ЗаполнятьПользовательскийОтборПоОрганизации;
	
	// По умолчанию добавим в пользовательские настройки отбор по организации
	КоллекцияОтборов = ЗарплатаКадрыКлиентСервер.ФиксированныйОтборДинамическогоСписка(Форма, Список);
	ДобавитьПользовательскийОтборПоОрганизацииВДинамическийСписок(Форма, Список.КомпоновщикНастроек.ПользовательскиеНастройки, КоллекцияОтборов);
	
	// Обновим надпись фиксированных настроек отбора
	ЗарплатаКадрыКлиентСервер.ОбновитьНадписьФиксированногоОтбора(Форма);
	
КонецПроцедуры